{"version":3,"sources":["webpack:///./routes/home/index.js","webpack:///./assets/states.js","webpack:///./components/set_title.js"],"names":["states","require","stateCounts","listItems","Object","entries","map","st","name","count","ref","toLowerCase","key","href","Home","url","module","exports","AL","AK","AS","AZ","AR","CA","CO","CT","DE","DC","FM","FL","GA","GU","HI","ID","IL","IN","IA","KS","KY","LA","ME","MH","MD","MA","MI","MN","MS","MO","MT","NE","NV","NH","NJ","NM","NY","NC","ND","MP","OH","OK","OR","PW","PA","PR","RI","SC","SD","TN","TX","UT","VT","VI","VA","WA","WV","WI","WY","SetTitle","window","data","usePrerenderData","meta","document","title","find","property","content"],"mappings":"6FAAA,mCAGA,MAAMA,EAASC,EAAQ,QACjBC,EAAcD,EAAQ,QAAyBC,YAU/CC,EAAY,IACTC,OAAOC,QAAQL,GAAQM,KAAI,EAAEC,EAAIC,MACtC,MAAMC,EAAQP,EAAYK,GACpBG,EAAMH,EAAGI,cACf,OAAOF,EAAQ,kBAAIG,IAAKF,GAAK,iBAAGG,KAAO,IAAGH,KAAQF,EAArB,KAAkCN,EAAYK,GAA9C,MAA+D,QAIjFO,UAhBF,EAAGC,SACd,uBACE,YAAC,IAAD,CAAUA,IAAKA,IACf,8CAAyB,iBAAGF,KAAK,2DAAR,mBAAzB,wBACA,sBAAKV,O,iBCmDTa,EAAOC,QA7DQ,CACbC,GAAI,UACJC,GAAI,SACJC,GAAI,iBACJC,GAAI,UACJC,GAAI,WACJC,GAAI,aACJC,GAAI,WACJC,GAAI,cACJC,GAAI,WACJC,GAAI,uBACJC,GAAI,iCACJC,GAAI,UACJC,GAAI,UACJC,GAAI,OACJC,GAAI,SACJC,GAAI,QACJC,GAAI,WACJC,GAAI,UACJC,GAAI,OACJC,GAAI,SACJC,GAAI,WACJC,GAAI,YACJC,GAAI,QACJC,GAAI,mBACJC,GAAI,WACJC,GAAI,gBACJC,GAAI,WACJC,GAAI,YACJC,GAAI,cACJC,GAAI,WACJC,GAAI,UACJC,GAAI,WACJC,GAAI,SACJC,GAAI,gBACJC,GAAI,aACJC,GAAI,aACJC,GAAI,WACJC,GAAI,iBACJC,GAAI,eACJC,GAAI,2BACJC,GAAI,OACJC,GAAI,WACJC,GAAI,SACJC,GAAI,QACJC,GAAI,eACJC,GAAI,cACJC,GAAI,eACJC,GAAI,iBACJC,GAAI,eACJC,GAAI,YACJC,GAAI,QACJC,GAAI,OACJC,GAAI,UACJC,GAAI,iBACJC,GAAI,WACJC,GAAI,aACJC,GAAI,gBACJC,GAAI,YACJC,GAAI,Y,kCC3DN,gBAUeC,IARE,EAAG9D,UAClB,GAAsB,oBAAX+D,OAAwB,OACnC,MAAOC,GAAQC,YAAiB,CAAEjE,QAC9BgE,GAAQA,EAAKE,OACfC,SAASC,MAAQJ,EAAKE,KAAKG,MAAKH,GAAQA,EAAKI,UAA8B,aAAlBJ,EAAKI,WAAyBC","file":"route-home.chunk.0a033.esm.js","sourcesContent":["import { h } from 'preact'\nimport SetTitle from '../../components/set_title'\n\nconst states = require('../../assets/states.js')\nconst stateCounts = require('../../assets/banks.js').stateCounts\n\nconst Home = ({ url }) => (\n  <div>\n    <SetTitle url={url} />\n    <p>Choose a state to see <a href='http://www.feedingamerica.org/find-your-local-foodbank/'>Feeding America</a> partner food banks.</p>\n    <ul>{listItems()}</ul>\n  </div>\n)\n\nconst listItems = () => {\n  return Object.entries(states).map(([st, name]) => {\n    const count = stateCounts[st]\n    const ref = st.toLowerCase()\n    return count ? <li key={ref}><a href={`/${ref}`}>{name}&nbsp;({stateCounts[st]})</a></li> : null\n  })\n}\n\nexport default Home\n","const states = {\n  AL: 'Alabama',\n  AK: 'Alaska',\n  AS: 'American Samoa',\n  AZ: 'Arizona',\n  AR: 'Arkansas',\n  CA: 'California',\n  CO: 'Colorado',\n  CT: 'Connecticut',\n  DE: 'Delaware',\n  DC: 'District Of Columbia',\n  FM: 'Federated States Of Micronesia',\n  FL: 'Florida',\n  GA: 'Georgia',\n  GU: 'Guam',\n  HI: 'Hawaii',\n  ID: 'Idaho',\n  IL: 'Illinois',\n  IN: 'Indiana',\n  IA: 'Iowa',\n  KS: 'Kansas',\n  KY: 'Kentucky',\n  LA: 'Louisiana',\n  ME: 'Maine',\n  MH: 'Marshall Islands',\n  MD: 'Maryland',\n  MA: 'Massachusetts',\n  MI: 'Michigan',\n  MN: 'Minnesota',\n  MS: 'Mississippi',\n  MO: 'Missouri',\n  MT: 'Montana',\n  NE: 'Nebraska',\n  NV: 'Nevada',\n  NH: 'New Hampshire',\n  NJ: 'New Jersey',\n  NM: 'New Mexico',\n  NY: 'New York',\n  NC: 'North Carolina',\n  ND: 'North Dakota',\n  MP: 'Northern Mariana Islands',\n  OH: 'Ohio',\n  OK: 'Oklahoma',\n  OR: 'Oregon',\n  PW: 'Palau',\n  PA: 'Pennsylvania',\n  PR: 'Puerto Rico',\n  RI: 'Rhode Island',\n  SC: 'South Carolina',\n  SD: 'South Dakota',\n  TN: 'Tennessee',\n  TX: 'Texas',\n  UT: 'Utah',\n  VT: 'Vermont',\n  VI: 'Virgin Islands',\n  VA: 'Virginia',\n  WA: 'Washington',\n  WV: 'West Virginia',\n  WI: 'Wisconsin',\n  WY: 'Wyoming'\n}\nmodule.exports = states\n","import { usePrerenderData } from '@preact/prerender-data-provider'\n\nconst SetTitle = ({ url }) => {\n  if (typeof window === 'undefined') return\n  const [data] = usePrerenderData({ url })\n  if (data && data.meta) {\n    document.title = data.meta.find(meta => meta.property && meta.property === 'og:title').content\n  }\n}\n\nexport default SetTitle\n"],"sourceRoot":""}